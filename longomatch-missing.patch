--- longomatch-1.0.2/LongoMatch.Plugins.GStreamer.orig/Assembly.cs	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.GStreamer/Assembly.cs	2016-01-17 21:16:48.139750827 +0100
@@ -0,0 +1,24 @@
+//
+//  Copyright (C) 2014 Andoni Morales Alastruey
+//
+//  This program is free software; you can redistribute it and/or modify
+//  it under the terms of the GNU General Public License as published by
+//  the Free Software Foundation; either version 2 of the License, or
+//  (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+//  GNU General Public License for more details.
+//
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
+//
+using Mono.Addins;
+
+[assembly:Addin]
+[assembly:AddinAuthor ("LongoMatch Project")]
+[assembly:AddinName ("Free Codecs")]
+[assembly:AddinDescription ("Free Software codecs for audio/video encoding and decoding with patents and licence issues")]
+[assembly:AddinDependency ("LongoMatch", "1.1")]
--- longomatch-1.0.2/LongoMatch.Plugins.GStreamer.orig/GStreamerRestricted.cs	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.GStreamer/GStreamerRestricted.cs	2016-01-17 21:16:48.139750827 +0100
@@ -0,0 +1,63 @@
+//
+//  Copyright (C) 2014 Andoni Morales Alastruey
+//
+//  This program is free software; you can redistribute it and/or modify
+//  it under the terms of the GNU General Public License as published by
+//  the Free Software Foundation; either version 2 of the License, or
+//  (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+//  GNU General Public License for more details.
+//
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
+//
+using Mono.Addins;
+using LongoMatch.Addins.ExtensionPoints;
+using System;
+using System.IO;
+using System.Runtime.InteropServices;
+using Mono.Unix;
+using LongoMatch.Core.Common;
+
+namespace LongoMatch.Plugins.GStreamer
+{
+	[Extension]
+	public class GStreamerRestricted: IGStreamerPluginsProvider
+	{
+		[DllImport("libgstreamer-0.10.dll")]
+		static extern bool gst_registry_scan_path (IntPtr registry, IntPtr path);
+
+		[DllImport("libgstreamer-0.10.dll")]
+		static extern IntPtr gst_registry_get_default ();
+
+		public string Name {
+			get {
+				return Catalog.GetString ("GStreamer open source plugins");
+			}
+		}
+
+		public string Description {
+			get {
+				return Catalog.GetString ("GStreamer open source plugins with patents issues");
+			}
+		}
+
+		public void RegisterPlugins ()
+		{
+			string gstdir = Path.Combine (Config.PluginsDir, "gstreamer-0.10");
+			if (Environment.OSVersion.Platform == PlatformID.Win32NT) {
+				Environment.SetEnvironmentVariable ("PATH",
+				                                    Environment.GetEnvironmentVariable ("PATH") + ";" + gstdir);
+			}
+			Log.Information ("Registering plugins in directory " + gstdir);
+			IntPtr p = GLib.Marshaller.StringToPtrGStrdup (gstdir);
+			IntPtr reg = gst_registry_get_default ();
+			gst_registry_scan_path (reg, p);
+			GLib.Marshaller.Free (p);
+		}
+	}
+}
--- longomatch-1.0.2/LongoMatch.Plugins.GStreamer.orig/LongoMatch.Plugins.GStreamer.csproj	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.GStreamer/LongoMatch.Plugins.GStreamer.csproj	2016-01-17 21:17:00.796416962 +0100
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProductVersion>12.0.0</ProductVersion>
+    <SchemaVersion>2.0</SchemaVersion>
+    <ProjectGuid>{92BF45E5-4F84-48FB-B3F0-BB8878B6137B}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <RootNamespace>LongoMatch.Plugins.GStreamer</RootNamespace>
+    <AssemblyName>LongoMatch.Plugins.GStreamer</AssemblyName>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>..\bin</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>full</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>..\bin</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup>
+    <Compile Include="Assembly.cs" />
+    <Compile Include="GStreamerRestricted.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <Reference Include="Mono.Addins, Version=1.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756">
+      <Private>False</Private>
+      <Package>mono-addins</Package>
+    </Reference>
+    <Reference Include="System" />
+    <Reference Include="glib-sharp, Version=2.12.0.0, Culture=neutral, PublicKeyToken=35e10195dab3c99f">
+      <Private>False</Private>
+      <Package>glib-sharp-2.0</Package>
+    </Reference>
+    <Reference Include="Mono.Posix" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\LongoMatch.Addins\LongoMatch.Addins.csproj">
+      <Project>{709CCDA6-CA95-4CBD-A986-B96EE0418905}</Project>
+      <Name>LongoMatch.Addins</Name>
+    </ProjectReference>
+    <ProjectReference Include="..\LongoMatch.Core\LongoMatch.Core.csproj">
+      <Project>{B70912B2-7ED5-450E-97BD-45A3D45A0358}</Project>
+      <Name>LongoMatch.Core</Name>
+    </ProjectReference>
+  </ItemGroup>
+</Project>
\ No newline at the end of file
--- longomatch-1.0.2/LongoMatch.Plugins.GStreamer.orig/LongoMatch.Plugins.GStreamer.dll.config	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.GStreamer/LongoMatch.Plugins.GStreamer.dll.config	2016-01-17 21:17:00.799750295 +0100
@@ -0,0 +1,5 @@
+<configuration>
+        <dllmap dll="libgstreamer-0.10.dll" target="libgstreamer-0.10.0.dylib"/>
+        <dllmap os="linux" dll="libgstreamer-0.10.dll" target="libgstreamer-0.10.so.0"/>
+        <dllmap os="windows" dll="libgstreamer-0.10.dll" target="libgstreamer-0.10-0.dll"/>
+</configuration>
--- longomatch-1.0.2/LongoMatch.Plugins.GStreamer.orig/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.GStreamer/Makefile.am	2016-01-17 21:16:43.956417669 +0100
@@ -0,0 +1,15 @@
+ASSEMBLY = LongoMatch.Plugins.GStreamer
+TARGET = library
+INSTALL_DIR = $(pkglibdir)/plugins/LongoMatch.Plugins.GStreamer/
+
+LINK = $(REF_DEP_LONGOMATCH_PLUGINS_GSTREAMER)
+
+SOURCES = Assembly.cs \
+	GStreamerRestricted.cs
+
+RESOURCES = 
+
+DLLCONFIG = LongoMatch.Plugins.GStreamer.dll.config
+
+include $(top_srcdir)/build/build.mk
+
--- longomatch-1.0.2/LongoMatch.Multimedia/LongoMatch.Multimedia.dll.config.orig	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Multimedia/LongoMatch.Multimedia.dll.config	2016-01-17 21:42:21.836353168 +0100
@@ -0,0 +1,8 @@
+<configuration>
+        <dllmap dll="libcesarplayer.dll" target="libcesarplayer.0.dylib"/>
+        <dllmap os="linux" dll="libcesarplayer.dll" target="libcesarplayer.so.0"/>
+        <dllmap os="windows" dll="libcesarplayer.dll" target="libcesarplayer-0.dll"/>
+        <dllmap dll="libgstreamer-0.10.dll" target="libgstreamer-0.10.0.dylib"/>
+        <dllmap os="linux" dll="libgstreamer-0.10.dll" target="libgstreamer-0.10.so.0"/>
+        <dllmap os="windows" dll="libgstreamer-0.10.dll" target="libgstreamer-0.10-0.dll"/>
+</configuration>
--- longomatch-1.0.2/LongoMatch.Plugins.Stats/gtk-gui/LongoMatch.Plugins.Stats.PlayerSubcategoryViewer.cs.orig	1970-01-01 01:00:00.000000000 +0100
+++ longomatch-1.0.2/LongoMatch.Plugins.Stats/gtk-gui/LongoMatch.Plugins.Stats.PlayerSubcategoryViewer.cs	2016-01-17 21:46:54.109675035 +0100
@@ -0,0 +1,68 @@
+
+// This file has been generated by the GUI designer. Do not modify.
+namespace LongoMatch.Plugins.Stats
+{
+	public partial class PlayerSubcategoryViewer
+	{
+		private global::Gtk.Frame frame2;
+		private global::Gtk.Alignment GtkAlignment;
+		private global::Gtk.HBox hbox1;
+		private global::Gtk.ScrolledWindow GtkScrolledWindow;
+		private global::Gtk.TreeView treeview;
+		private global::LongoMatch.Plugins.Stats.Plotter plotter1;
+		private global::Gtk.Label gtkframe;
+
+		protected virtual void Build ()
+		{
+			global::Stetic.Gui.Initialize (this);
+			// Widget LongoMatch.Plugins.Stats.PlayerSubcategoryViewer
+			global::Stetic.BinContainer.Attach (this);
+			this.Name = "LongoMatch.Plugins.Stats.PlayerSubcategoryViewer";
+			// Container child LongoMatch.Plugins.Stats.PlayerSubcategoryViewer.Gtk.Container+ContainerChild
+			this.frame2 = new global::Gtk.Frame ();
+			this.frame2.Name = "frame2";
+			this.frame2.ShadowType = ((global::Gtk.ShadowType)(0));
+			// Container child frame2.Gtk.Container+ContainerChild
+			this.GtkAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
+			this.GtkAlignment.Name = "GtkAlignment";
+			this.GtkAlignment.LeftPadding = ((uint)(12));
+			// Container child GtkAlignment.Gtk.Container+ContainerChild
+			this.hbox1 = new global::Gtk.HBox ();
+			this.hbox1.Name = "hbox1";
+			this.hbox1.Spacing = 6;
+			// Container child hbox1.Gtk.Box+BoxChild
+			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
+			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
+			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
+			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
+			this.treeview = new global::Gtk.TreeView ();
+			this.treeview.CanFocus = true;
+			this.treeview.Name = "treeview";
+			this.GtkScrolledWindow.Add (this.treeview);
+			this.hbox1.Add (this.GtkScrolledWindow);
+			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.GtkScrolledWindow]));
+			w2.Position = 0;
+			// Container child hbox1.Gtk.Box+BoxChild
+			this.plotter1 = new global::LongoMatch.Plugins.Stats.Plotter ();
+			this.plotter1.Events = ((global::Gdk.EventMask)(256));
+			this.plotter1.Name = "plotter1";
+			this.hbox1.Add (this.plotter1);
+			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.plotter1]));
+			w3.Position = 1;
+			w3.Expand = false;
+			w3.Fill = false;
+			this.GtkAlignment.Add (this.hbox1);
+			this.frame2.Add (this.GtkAlignment);
+			this.gtkframe = new global::Gtk.Label ();
+			this.gtkframe.Name = "gtkframe";
+			this.gtkframe.LabelProp = global::Mono.Unix.Catalog.GetString ("<b></b>");
+			this.gtkframe.UseMarkup = true;
+			this.frame2.LabelWidget = this.gtkframe;
+			this.Add (this.frame2);
+			if ((this.Child != null)) {
+				this.Child.ShowAll ();
+			}
+			this.Hide ();
+		}
+	}
+}
